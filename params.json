{"name":"Forbject","tagline":"simple form to object mapping","body":"# forbject  [![NPM version](https://badge.fury.io/js/forbject.svg)](http://badge.fury.io/js/forbject)\r\n\r\n** CommonJS/Browserified simple form object data mapping, without magic **\r\n\r\nForbject creates key/value pairs from form elements. This is a quick and simple vanilla JS way to map data without the baggage of a full framework.\r\n\r\n [API Documenation](https://yawetse.github.io/forbject/api/html/index.html)\r\n\r\n## Example\r\n\r\nCheck out `example/index.html`, the example javascript for the example page is `resources/js/example_src.js`\r\n\r\n## Installation\r\n\r\n```\r\n$ npm install forbject\r\n```\r\n\r\nForbject is a browserified/commonjs javascript module.\r\n\r\n## Usage\r\n\r\n*JavaScript*\r\n```javascript\r\nvar forbject = require('forbject'),\r\n\tmyforbject;\r\n\r\nvar updateforbjectData = function(){\r\n  forbject1= new.forbject('#form-selector');\r\n};\r\n\r\n//initialize nav component after the dom has loaded\r\nwindow.addEventListener('load',function(){\r\n\tvar formelement = document.querySelector('form#myFormObjectSelector');\r\n\tmyforbject = new forbject(formelement);\r\n\r\n\t//expose your nav component to the window global namespace\r\n\twindow.myforbject = myforbject;\r\n\r\n  console.log(myforbject.getObject());\r\n});\r\n```\r\n\r\n*HTML*\r\n```html\r\n<html>\r\n\t<head>\r\n  \t<title>Your Page</title>\r\n  \t<script src='[path/to/browserify/bundle].js'></script>\r\n\t</head>\r\n\t<body>\r\n    <form id=\"form-selector\">\r\n      <section>\r\n        <label for=\"field1\">Field 1</label>\r\n        <input type=\"text\" value=\"fieldval1\" name=\"field1\" id=\"field1\" />\r\n      </section>\r\n      <section>\r\n        <label for=\"field2\">Field 2</label>\r\n        <input type=\"text\" value=\"fieldval2\" name=\"field2\" id=\"field2\" />\r\n      </section>\r\n    </form>\r\n\t</body>\r\n</html>\r\n```\r\n\r\n##API\r\n\r\n```javascript\r\n//update form elements to JSON from Form element\r\nmyforbject.refresh(); \r\n\r\n//get form object\r\nmyforbject.getObject(); \r\n\r\n//events\r\nmyforbject.on('init',callback); // callback()\r\nmyforbject.on('serialized',callback); // callback(data)\r\nmyforbject.on('refresh',callback); // callback(data)\r\n```\r\n##Development\r\n*Make sure you have grunt installed*\r\n```\r\n$ npm install -g grunt-cli\r\n```\r\n\r\nThen run grunt watch\r\n```\r\n$ grunt watch\r\n```\r\n##For generating documentation\r\n```\r\n$ grunt doc\r\n$ jsdoc2md lib/**/*.js index.js > doc/api.md\r\n```\r\n\r\n##Notes\r\n* The Forbject Module uses Node's event Emitter for event handling.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}